+ echo Logging output to experiments/logs/test_res101_voc_2007_trainval_.txt.2017-09-15_17-09-22
Logging output to experiments/logs/test_res101_voc_2007_trainval_.txt.2017-09-15_17-09-22
+ set +x
+ [[ ! -z '' ]]
+ CUDA_VISIBLE_DEVICES=0
+ time python ./tools/test_net.py --imdb voc_2007_test --model output/res101/voc_2007_trainval/default/res101_faster_rcnn_iter_30000.ckpt --cfg experiments/cfgs/res101.yml --net res101 --set ANCHOR_SCALES '[8,16,32]' ANCHOR_RATIOS '[0.5,1,2]'
Called with args:
Namespace(cfg_file='experiments/cfgs/res101.yml', comp_mode=False, imdb_name='voc_2007_test', max_per_image=100, model='output/res101/voc_2007_trainval/default/res101_faster_rcnn_iter_30000.ckpt', net='res101', set_cfgs=['ANCHOR_SCALES', '[8,16,32]', 'ANCHOR_RATIOS', '[0.5,1,2]'], tag='')
Using config:
{'ANCHOR_RATIOS': [0.5, 1, 2],
 'ANCHOR_SCALES': [8, 16, 32],
 'DATA_DIR': '/home/yunqiuxu/faster-rcnn-resnet/data',
 'EXP_DIR': 'res101',
 'MATLAB': 'matlab',
 'MOBILENET': {'DEPTH_MULTIPLIER': 1.0,
               'FIXED_LAYERS': 5,
               'REGU_DEPTH': False,
               'WEIGHT_DECAY': 4e-05},
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'RESNET': {'FIXED_BLOCKS': 1, 'MAX_POOL': False},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/yunqiuxu/faster-rcnn-resnet',
 'RPN_CHANNELS': 512,
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'MODE': 'nms',
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'gt',
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'RPN_TOP_N': 5000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': False,
           'BATCH_SIZE': 256,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'BIAS_DECAY': False,
           'DISPLAY': 20,
           'DOUBLE_BIAS': False,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'GAMMA': 0.1,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'LEARNING_RATE': 0.001,
           'MAX_SIZE': 1000,
           'MOMENTUM': 0.9,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_ITERS': 5000,
           'SNAPSHOT_KEPT': 3,
           'SNAPSHOT_PREFIX': 'res101_faster_rcnn',
           'STEPSIZE': [30000],
           'SUMMARY_INTERVAL': 180,
           'TRUNCATED': False,
           'USE_ALL_GT': True,
           'USE_FLIPPED': True,
           'USE_GT': False,
           'WEIGHT_DECAY': 0.0001},
 'USE_GPU_NMS': True}
2017-09-15 17:09:52.969418: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2017-09-15 17:09:52.969443: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2017-09-15 17:09:52.969450: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2017-09-15 17:09:52.969455: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2017-09-15 17:09:52.969460: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
Loading model check point from output/res101/voc_2007_trainval/default/res101_faster_rcnn_iter_30000.ckpt
Loaded.
im_detect: 1/66 6.222s 0.000s
im_detect: 2/66 5.306s 0.000s
im_detect: 3/66 4.978s 0.000s
im_detect: 4/66 4.862s 0.000s
im_detect: 5/66 4.776s 0.000s
im_detect: 6/66 4.728s 0.000s
im_detect: 7/66 4.691s 0.000s
im_detect: 8/66 4.686s 0.000s
im_detect: 9/66 4.672s 0.000s
im_detect: 10/66 4.655s 0.000s
im_detect: 11/66 4.650s 0.000s
im_detect: 12/66 4.635s 0.000s
im_detect: 13/66 4.643s 0.000s
im_detect: 14/66 4.629s 0.000s
im_detect: 15/66 4.626s 0.000s
im_detect: 16/66 4.633s 0.000s
im_detect: 17/66 4.618s 0.000s
im_detect: 18/66 4.621s 0.000s
im_detect: 19/66 4.630s 0.000s
im_detect: 20/66 4.617s 0.000s
im_detect: 21/66 4.609s 0.000s
im_detect: 22/66 4.614s 0.000s
im_detect: 23/66 4.613s 0.000s
im_detect: 24/66 4.608s 0.000s
im_detect: 25/66 4.613s 0.000s
im_detect: 26/66 4.612s 0.000s
im_detect: 27/66 4.602s 0.000s
im_detect: 28/66 4.591s 0.000s
im_detect: 29/66 4.582s 0.000s
im_detect: 30/66 4.582s 0.000s
im_detect: 31/66 4.584s 0.000s
im_detect: 32/66 4.591s 0.000s
im_detect: 33/66 4.592s 0.000s
im_detect: 34/66 4.593s 0.000s
im_detect: 35/66 4.597s 0.000s
im_detect: 36/66 4.599s 0.000s
im_detect: 37/66 4.603s 0.000s
im_detect: 38/66 4.601s 0.000s
im_detect: 39/66 4.596s 0.000s
im_detect: 40/66 4.588s 0.000s
im_detect: 41/66 4.581s 0.000s
im_detect: 42/66 4.580s 0.000s
im_detect: 43/66 4.582s 0.000s
im_detect: 44/66 4.586s 0.000s
im_detect: 45/66 4.591s 0.000s
im_detect: 46/66 4.593s 0.000s
im_detect: 47/66 4.595s 0.000s
im_detect: 48/66 4.597s 0.000s
im_detect: 49/66 4.598s 0.000s
im_detect: 50/66 4.597s 0.000s
im_detect: 51/66 4.596s 0.000s
im_detect: 52/66 4.596s 0.000s
im_detect: 53/66 4.596s 0.000s
im_detect: 54/66 4.598s 0.000s
im_detect: 55/66 4.594s 0.000s
im_detect: 56/66 4.591s 0.000s
im_detect: 57/66 4.586s 0.000s
im_detect: 58/66 4.582s 0.000s
im_detect: 59/66 4.580s 0.000s
im_detect: 60/66 4.579s 0.000s
im_detect: 61/66 4.577s 0.000s
im_detect: 62/66 4.573s 0.000s
im_detect: 63/66 4.570s 0.000s
im_detect: 64/66 4.566s 0.000s
im_detect: 65/66 4.563s 0.000s
im_detect: 66/66 4.562s 0.000s
Evaluating detections
Writing YES VOC results file
Writing NO VOC results file
VOC07 metric? Yes
detfile /home/yunqiuxu/faster-rcnn-resnet/data/VOCdevkit2007/results/VOC2007/Main/comp4_48c0abda-52f1-404f-bc45-0bc63afc8ac0_det_test_YES.txt YES
Traceback (most recent call last):
  File "./tools/test_net.py", line 120, in <module>
    test_net(sess, net, imdb, filename, max_per_image=args.max_per_image)
  File "/home/yunqiuxu/faster-rcnn-resnet/tools/../lib/model/test.py", line 192, in test_net
    imdb.evaluate_detections(all_boxes, output_dir)
  File "/home/yunqiuxu/faster-rcnn-resnet/tools/../lib/datasets/pascal_voc.py", line 280, in evaluate_detections
    self._do_python_eval(output_dir)
  File "/home/yunqiuxu/faster-rcnn-resnet/tools/../lib/datasets/pascal_voc.py", line 243, in _do_python_eval
    use_07_metric=use_07_metric)
  File "/home/yunqiuxu/faster-rcnn-resnet/tools/../lib/datasets/voc_eval.py", line 181, in voc_eval
    f = open(file_path,"w+")
IOError: [Errno 2] No such file or directory: './result/YES.txt'
Command exited with non-zero status 1
4781.80user 521.61system 5:50.28elapsed 1514%CPU (0avgtext+0avgdata 1232880maxresident)k
787536inputs+103192outputs (851major+55600833minor)pagefaults 0swaps
